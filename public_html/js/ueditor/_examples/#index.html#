<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
    "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=8">
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
    <title></title>
    <script type="text/javascript" charset="utf-8" src="../editor_config.js"></script>
    <script type="text/javascript" src="../editor_ui_all.js"></script>
    <link rel="stylesheet" type="text/css" href="../themes/default/ueditor.css"/>
    <style type="text/css">
        #editor {
            width: 843px;
        }
        /* for IE6 fixed */
        body {
            background: url('about:blank') fixed;
        }
    </style>
</head>
<body>
<h1>编辑器UI示例</h1>
<script type="text/javascript">
    var serializeConfig = function (){
    return {
    blackList: {style:1,script:1,link:1,object:1,applet:1,input:1,meta:1,base:1,button:1,select:1,textarea:1,iframe:1,'#comment':1}
    };
    }();
    var editor = new baidu.editor.ui.Editor({
    id: 'editor',
        initialContent: '!',
        initialStyle :'.selectTdClass{background-color:#3399FF !important}',
        minFrameHeight: 320,
        autoHeightEnabled: true,
        serialize: serializeConfig
    });
    (function (){
        var floating = false;
        var MIN_HEIGHT = 0;
        var bakCssText;
        var placeHolder = document.createElement('div');
        function setFloating(delta){
            var toolbarBox = editor.ui.getDom('toolbarbox');
            placeHolder.style.height = toolbarBox.offsetHeight + 'px';
            bakCssText = toolbarBox.style.cssText;
            toolbarBox.style.width = toolbarBox.offsetWidth + 'px';
            toolbarBox.parentNode.insertBefore(placeHolder, toolbarBox);
            if (baidu.editor.browser.ie && baidu.editor.browser.version <= 6) {
                toolbarBox.style.position = 'absolute';
                toolbarBox.style.setExpression('top', 'eval("((document.documentElement||document.body).scrollTop-'+ delta +')+\'px\'")');
                toolbarBox.style.zIndex = '1';
            } else {
                toolbarBox.style.position = 'fixed';
                toolbarBox.style.zIndex = '1';
                toolbarBox.style.top = '0';
            }
            floating = true;
        }
        function unsetFloating(){
            var toolbarBox = editor.ui.getDom('toolbarbox');
            placeHolder.parentNode.removeChild(placeHolder);
            if (baidu.editor.browser.ie && baidu.editor.browser.version <= 6) {
                toolbarBox.style.removeExpression('top');
            }
            toolbarBox.style.cssText = bakCssText;
            floating = false;
        }
        function updateFloating(){
            var rect = baidu.editor.ui.uiUtils.getClientRect(
                    editor.ui.getDom('toolbarbox'));
            var rect2 = baidu.editor.ui.uiUtils.getClientRect(
                    editor.ui.getDom('iframeholder'));
            if (!floating) {
                if (rect.top < 0 && rect2.bottom > rect.height + MIN_HEIGHT) {
                    var delta = (document.documentElement.scrollTop || document.body.scrollTop) + rect.top;
                    setFloating(delta);
                }
            } else {
                var rect1 = baidu.editor.ui.uiUtils.getClientRect(placeHolder);
                if (rect.top < rect1.top || rect.bottom + MIN_HEIGHT > rect2.bottom) {
                    unsetFloating();
                }
            }
        }
        editor.addListener('autoheightchanged', function (t, enabled){
            if (enabled) {
                baidu.editor.dom.domUtils.on(window, 'scroll', updateFloating);
                baidu.editor.dom.domUtils.on(window, 'resize', updateFloating);
                editor.addListener('keydown', updateFloating);
            } else {
                baidu.editor.dom.domUtils.un(window, 'scroll', updateFloating);
                baidu.editor.dom.domUtils.un(window, 'resize', updateFloating);
                editor.removeListener('keydown', updateFloating);
            }
        });
        editor.addListener('beforefullscreenchange', function (t, enabled){
            if (enabled) {
                if (floating) {
                    unsetFloating();
                }
            }
        });
        editor.addListener('fullscreenchanged', function (t, enabled){
            if (!enabled) {
                updateFloating();
            }
        });
    })();
    editor.render('editor');
</script>
</body>
</html>
